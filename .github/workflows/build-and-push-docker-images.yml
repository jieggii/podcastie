name: Build and Push Docker Images, Deploy Them on The Server

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push bot Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./services/bot/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/bot:latest

      - name: Build and Push feed_poller Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./services/feed_poller/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/feed_poller:latest

      - name: Pull Images and Deploy Them on The Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port:  ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.SSH_WORKDIR }}

            # create secrets dir:
            mkdir -p .secrets
            echo "${{ secrets.BOT_TOKEN }}" > .secrets/bot_token
            echo "${{ secrets.MONGO_DATABASE }}" > .secrets/mongo_database

            # run images:
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "${{ secrets.actor }}" --password-stdin
            TG_API_HASH=${{ secrets.TG_API_HASH }} TG_API_ID=${{ secrets.TG_API_ID}} docker compose -f ./docker-compose.prod.yml up --build --detach
